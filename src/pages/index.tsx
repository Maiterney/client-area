import Head from 'next/head'
import Image from 'next/image'
import { InputText } from 'primereact/inputtext';
import { Password } from 'primereact/password';
import { Toast } from 'primereact/toast';

import React, { useEffect, useState, useRef } from 'react';
import { useForm, Controller } from 'react-hook-form';
import { classNames } from 'primereact/utils';


import styles from '../styles/layout/Login.module.scss'
import Logo from '../components/Svg/Logo';
import Router from 'next/router';

interface LoginType {
  username?: string;
  password?: string;
}

export default function Home() {
  const [showMessage, setShowMessage] = useState(false);
  const [formData, setFormData] = useState({});
  const defaultValues = {
    email: '',
    password: '',
  }
  const { control, formState: { errors }, handleSubmit, reset } = useForm({ defaultValues });

  const toast = useRef<any>(null);

  const showError = () => {
    toast.current.show({severity:'error', summary: 'Error Message', detail:'Message Content', life: 3000});
  }

  const onSubmit = (data:any) => {
      setFormData(data); 
      // showError()
      console.log(data)
      Router.push('/dashboard')

      // reset();
  };

    const getFormErrorMessage = (name?:string) => {
        /* @ts-ignore */
        return errors[name] && <small className="p-error">{errors[name].message}</small>
    };


    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={`main ${styles.main}`}>
          <section className={`${styles.login}`}>
                <div className={styles.loginContent}>
                  <div className={styles.logo}>
                    <Logo />
                  </div>
                  <form onSubmit={handleSubmit(onSubmit)} className='login'>
                        <div className="formController">
                            <div className="formRow">
                                <div className="formGroup">
                                    <Controller name="email" control={control}
                                        rules={
                                          { required: 'Email is required.', pattern: 
                                          { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i, message: 'Invalid email address. E.g. example@email.com' }
                                        }
                                      }
                                      render={({ field, fieldState }) => (
                                        <InputText id={field.name} placeholder='Email' {...field} className={classNames({ 'p-invalid': fieldState.invalid })} />
                                      )} />
                                      <i className="pi pi-envelope iconLabel" />
                                    {getFormErrorMessage('email')}
                                </div>
                            </div>
                            <div className="formRow">
                                <div className="formGroup">
                                  <i className="pi pi-lock iconLabel" />
                                  <Controller name="password" control={control} rules={{ required: 'Password is required.' }} render={({ field, fieldState }) => (
                                    <Password id={field.name} {...field} toggleMask placeholder='Senha' feedback={false} className={classNames({ 'p-invalid': fieldState.invalid })}/>
                                  )} />
                                  {getFormErrorMessage('password')}
                                </div>
                            </div>
                          <div className="submitButton">
                            <button className="btn default primary">Enviar</button>
                          </div>
                        </div>
                    </form>
                </div>
          </section>

          <Toast ref={toast} />
        </main>
      </>
    )
}
